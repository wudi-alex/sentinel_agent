# filepath: /Users/xuhe/Documents/agent_experiments/SentinelAgent/docker-compose.yml
# SentinelAgent Docker Compose Configuration

services:
  sentinel-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentinel-agent
    ports:
      - "5002:5002"
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - SENTINEL_DATA_DIR=/app/data
      - SENTINEL_LOG_LEVEL=INFO
      - SENTINEL_PROJECTS_DIR=/app/projects
    volumes:
      # Persistent data storage
      - sentinel_data:/app/data
      - sentinel_logs:/app/logs
      # Mount host directories for analysis (optional)
      - ./examples:/app/data/examples:ro
      # Mount external projects for analysis
      - ../crewai_gmail:/app/projects/crewai_gmail:ro
      - ../autogen_magneticone:/app/projects/autogen_magneticone:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - sentinel-network

  # Optional: Add Redis for caching (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   container_name: sentinel-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - sentinel-network

  # Optional: Add PostgreSQL for persistent storage (future enhancement)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: sentinel-postgres
  #   environment:
  #     POSTGRES_DB: sentinel_agent
  #     POSTGRES_USER: sentinel
  #     POSTGRES_PASSWORD: sentinel_pass
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - sentinel-network

volumes:
  sentinel_data:
    driver: local
  sentinel_logs:
    driver: local
  # redis_data:
  #   driver: local
  # postgres_data:
  #   driver: local

networks:
  sentinel-network:
    driver: bridge
